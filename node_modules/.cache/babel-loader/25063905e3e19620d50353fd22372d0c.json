{"ast":null,"code":"var cheerio = require('cheerio');\n\nvar MetadataFields = require('./metadata-fields');\n\nvar extractMetaTags = require('./extract-meta-tags');\n\nvar mapSources = require('./map-sources');\n\nmodule.exports = function (url, body, options) {\n  var $ = cheerio.load(body);\n  var scrapedMetaTags = extractMetaTags($);\n  var metadata = new MetadataFields(options).configureType(scrapedMetaTags['og:type']).lockKeys().set(scrapedMetaTags).set({\n    url: url\n  }); // derive canonical url\n\n  if (!metadata.get('canonical')) {\n    $('link').each(function (index, el) {\n      if (el.attribs && el.attribs.rel === 'canonical' && el.attribs.href) {\n        metadata.set({\n          'canonical': el.attribs.href\n        });\n      }\n    });\n  } // derive the page title; default to `og:title` tag, failover to DOM title tag\n\n\n  if (metadata.get('og:title')) {\n    metadata.set({\n      title: metadata.get('og:title')\n    });\n  } else {\n    metadata.set({\n      title: $('title').html()\n    });\n  } // derive author\n\n\n  if (!metadata.get('author')) {\n    var author = metadata.get('article:author') || metadata.get('og:article:author') || '';\n    metadata.set({\n      author: author\n    });\n  } // derive `source` field from url host by default,\n  // then check if we need to overwrite `source` field\n  // as specified in options object passed into this module via `sourceMap`\n\n\n  metadata.set({\n    source: url.split('://')[1].split('/')[0]\n  }); // overwrite source field for youtube.com urls\n  // NOTE: this is derived from youtube's video player DOM.\n  // It may change and/or move over time and need updating.\n\n  var ytPlayerHtml = $('#player').html() || '';\n  var ytUsernameRgx = /\"author\":\"(.*?)\"/mi.exec(ytPlayerHtml);\n\n  if (ytUsernameRgx && ytUsernameRgx.length > 0) {\n    var source = mapSources(ytUsernameRgx[1], options.sourceMap);\n    if (source) metadata.set({\n      source: source\n    });\n  } // derive description\n\n\n  if (!metadata.get('description')) {\n    var description = metadata.get('og:description') || '';\n    metadata.set({\n      description: description\n    });\n  } // derive image\n\n\n  if (!metadata.get('image')) {\n    var image = metadata.get('og:image:secure_url') || metadata.get('og:image') || '';\n    metadata.set({\n      image: image\n    });\n  } // optionally encode all metadata fields and return them\n\n\n  return metadata.clean().finalize();\n};","map":null,"metadata":{},"sourceType":"script"}