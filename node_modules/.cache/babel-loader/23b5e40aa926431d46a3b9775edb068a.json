{"ast":null,"code":"var q = require('q');\n\nvar request = require('request');\n\nvar parse = require('./lib/parse');\n\nmodule.exports = function (url, options) {\n  var dfd = q.defer();\n  if (!options || typeof options !== 'object') options = {};\n  var opts = {\n    userAgent: options.userAgent || 'MetadataScraper',\n    fromEmail: options.fromEmail || 'example@example.com',\n    maxRedirects: options.maxRedirects || 10,\n    timeout: options.timeout || 10000,\n    descriptionLength: options.descriptionLength || 750,\n    ensureSecureImageRequest: options.ensureSecureImageRequest || true,\n    sourceMap: options.sourceMap || {},\n    decode: options.decode || undefined,\n    encode: options.encode || undefined\n  };\n  var requestOpts = {\n    url: url,\n    headers: {\n      'User-Agent': opts.userAgent,\n      'From': opts.fromEmail\n    },\n    maxRedirects: opts.maxRedirects,\n    encoding: opts.decode ? null : 'utf8',\n    timeout: opts.timeout\n  };\n  request.get(requestOpts, function (err, response, body) {\n    if (err || !response) {\n      return dfd.reject(err);\n    }\n\n    if (response.statusCode && response.statusCode !== 200) {\n      return dfd.reject({\n        Error: 'response code ' + response.statusCode\n      });\n    }\n\n    if (response.statusCode && response.statusCode === 200) {\n      // rewrite url if our request had to follow redirects to resolve the\n      // final link destination (for example: links shortened by bit.ly)\n      if (response.request.uri.href) url = response.request.uri.href;\n\n      if (opts.decode) {\n        body = opts.decode(body);\n      }\n\n      return dfd.resolve(parse(url, body, opts));\n    }\n  });\n  return dfd.promise;\n};","map":null,"metadata":{},"sourceType":"script"}